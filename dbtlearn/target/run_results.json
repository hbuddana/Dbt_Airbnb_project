{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.4", "generated_at": "2024-01-15T21:45:20.989462Z", "invocation_id": "b8e6020d-407c-4d78-9075-99d61ba9a884", "env": {}}, "results": [{"status": "pass", "timing": [{"name": "compile", "started_at": "2024-01-15T21:45:18.909835Z", "completed_at": "2024-01-15T21:45:18.972706Z"}, {"name": "execute", "started_at": "2024-01-15T21:45:19.003997Z", "completed_at": "2024-01-15T21:45:20.496906Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.7781612873077393, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b1b1b9-0001-99c8-0000-00051a76e0b1"}, "message": null, "failures": 0, "unique_id": "test.dbtlearn.dbt_expectations_expect_column_quantile_values_to_be_between_dim_listings_w_host_price__500__50__0_99.175c4539d2", "compiled": true, "compiled_code": "\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and percentile_cont(0.99) within group (order by price) >= 50 and percentile_cont(0.99) within group (order by price) <= 500\n)\n as expression\n\n\n    from airbnb.dev.dim_listings_w_host\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n", "relation_name": null}, {"status": "warn", "timing": [{"name": "compile", "started_at": "2024-01-15T21:45:18.878546Z", "completed_at": "2024-01-15T21:45:18.972706Z"}, {"name": "execute", "started_at": "2024-01-15T21:45:18.988331Z", "completed_at": "2024-01-15T21:45:20.656420Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.9370348453521729, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b1b1b9-0001-977c-0000-00051a7635cd"}, "message": "Got 1 result, configured to warn if != 0", "failures": 1, "unique_id": "test.dbtlearn.dbt_expectations_expect_column_max_to_be_between_dim_listings_w_host_price__5000.a6b4bd50d9", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and max(price) <= 5000\n)\n as expression\n\n\n    from airbnb.dev.dim_listings_w_host\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-01-15T21:45:18.925457Z", "completed_at": "2024-01-15T21:45:20.196963Z"}, {"name": "execute", "started_at": "2024-01-15T21:45:20.196963Z", "completed_at": "2024-01-15T21:45:20.773677Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 2.010826587677002, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b1b1b9-0001-977c-0000-00051a7635d1"}, "message": null, "failures": 0, "unique_id": "test.dbtlearn.dbt_expectations_expect_column_values_to_be_of_type_dim_listings_w_host_price__number.b31806067b", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('LISTING_ID' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LISTING_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ROOM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MINIMUM_NIGHTS' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRICE' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HOST_ID' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HOST_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HOST_IS_SUPERHOST' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_AT' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_AT' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PRICE'\n            and\n            relation_column_type not in ('NUMBER')\n\n    )\n    select *\n    from test_data", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-01-15T21:45:18.941039Z", "completed_at": "2024-01-15T21:45:18.972706Z"}, {"name": "execute", "started_at": "2024-01-15T21:45:19.019617Z", "completed_at": "2024-01-15T21:45:20.830696Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 2.1209638118743896, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b1b1b9-0001-99b6-0000-00051a76f0cd"}, "message": null, "failures": 0, "unique_id": "test.dbtlearn.dbt_expectations_expect_table_row_count_to_equal_other_table_dim_listings_w_host_source_airbnb_listings_.c3b799a26d", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        count(*) as expression\n    from\n        airbnb.dev.dim_listings_w_host\n    \n\n    ),\n    b as (\n        \n    select\n        \n        count(*) * 1 as expression\n    from\n        airbnb.raw.raw_listings\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        \n", "relation_name": null}], "elapsed_time": 3.6073129177093506, "args": {"favor_state": false, "quiet": false, "use_colors_file": true, "strict_mode": false, "profiles_dir": "C:\\Users\\user\\.dbt", "show_resource_report": false, "version_check": true, "log_level": "info", "indirect_selection": "eager", "vars": {}, "populate_cache": true, "exclude": [], "static_parser": true, "log_file_max_bytes": 10485760, "enable_legacy_logger": false, "select": ["dim_listings_w_host"], "invocation_command": "dbt test --select dim_listings_w_host", "warn_error_options": {"include": [], "exclude": []}, "log_level_file": "debug", "cache_selected_only": false, "partial_parse": true, "print": true, "log_path": "C:\\Users\\user\\Downloads\\course\\dbtlearn\\logs", "project_dir": "C:\\Users\\user\\Downloads\\course\\dbtlearn", "which": "test", "defer": false, "write_json": true, "introspect": true, "use_colors": true, "log_format_file": "debug", "printer_width": 80, "macro_debugging": false, "log_format": "default", "send_anonymous_usage_stats": true, "partial_parse_file_diff": true}}